<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Howto on</title><link>https://ttntm.github.io/tags/howto/</link><description>Recent content in Howto on</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Wed, 12 Dec 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://ttntm.github.io/tags/howto/index.xml" rel="self" type="application/rss+xml"/><item><title>jQuery Multiselect Filter</title><link>https://ttntm.github.io/blog/jquery-multiselect-filter/</link><pubDate>Wed, 12 Dec 2018 00:00:00 +0000</pubDate><guid>https://ttntm.github.io/blog/jquery-multiselect-filter/</guid><description>Filter requirements I spent quite some time working on a friend&amp;rsquo;s portfolio website recently. She wanted to get rid of some sort of hosted service, moving to her own website.
Showcasing her work was clearly the focus of the site, so it also needed to provide some decent filtering of the portfolio items.
The site itself was supposed to be built with Hugo that already provides a ton of functionality in terms of taxonomy and content metadata.</description></item><item><title>Building a responsive menu with Tailwind CSS</title><link>https://ttntm.github.io/blog/tailwind-responsive-menu/</link><pubDate>Thu, 20 Sep 2018 00:00:00 +0000</pubDate><guid>https://ttntm.github.io/blog/tailwind-responsive-menu/</guid><description>Tailwind CSS According to their docs:
Tailwind is a utility-first CSS framework for rapidly building custom user interfaces.
Being used to Bootstrap and/or other component based frameworks, this is quite a different approach.
Using Tailwind, basically everything you know from these frameworks is possible, but the way to get there is a little different. There&amp;rsquo;s no navbar, card or modal - instead, all of Tailwind&amp;rsquo;s classes can be used to actually build those components.</description></item><item><title>Using CSS Variables in Internet Explorer</title><link>https://ttntm.github.io/blog/using-css-variables-internet-explorer/</link><pubDate>Mon, 03 Sep 2018 00:00:00 +0000</pubDate><guid>https://ttntm.github.io/blog/using-css-variables-internet-explorer/</guid><description>Using CSS variables CSS variables (see: w3schools.com&amp;nbsp;) make working with stylesheets easier, no doubt about that. Defining a color, a breakpoint or even a font-family globally, makes changes easier and almost completely eliminates the copy/paste and the find/replace cycle when it comes to updates in your CSS.
Now, having to support Internet Explorer 11 and below with your CSS makes this a little less exciting, as it simply doesn&amp;rsquo;t support CSS variables at all.</description></item><item><title>Random Content from Data in Hugo</title><link>https://ttntm.github.io/blog/hugo-random-content-from-data/</link><pubDate>Tue, 21 Aug 2018 00:00:00 +0000</pubDate><guid>https://ttntm.github.io/blog/hugo-random-content-from-data/</guid><description>Data in Hugo Hugo comes with the possibility of storing structured content in a data file where it can be pulled from by the template placing it on the site. I&amp;rsquo;ve seen this used for things like pricing tables for example. There&amp;rsquo;s quite a bunch of use cases for random content on a website though, from customer references on a company website to quotes of the day for a literary blog.</description></item></channel></rss>